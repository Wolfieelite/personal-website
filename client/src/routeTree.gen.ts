/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OrginalcharactersRouteImport } from './routes/orginalcharacters'
import { Route as MygamesRouteImport } from './routes/mygames'
import { Route as GallaryRouteImport } from './routes/gallary'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const OrginalcharactersRoute = OrginalcharactersRouteImport.update({
  id: '/orginalcharacters',
  path: '/orginalcharacters',
  getParentRoute: () => rootRouteImport,
} as any)
const MygamesRoute = MygamesRouteImport.update({
  id: '/mygames',
  path: '/mygames',
  getParentRoute: () => rootRouteImport,
} as any)
const GallaryRoute = GallaryRouteImport.update({
  id: '/gallary',
  path: '/gallary',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/gallary': typeof GallaryRoute
  '/mygames': typeof MygamesRoute
  '/orginalcharacters': typeof OrginalcharactersRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/gallary': typeof GallaryRoute
  '/mygames': typeof MygamesRoute
  '/orginalcharacters': typeof OrginalcharactersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/gallary': typeof GallaryRoute
  '/mygames': typeof MygamesRoute
  '/orginalcharacters': typeof OrginalcharactersRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/gallary' | '/mygames' | '/orginalcharacters'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/gallary' | '/mygames' | '/orginalcharacters'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/gallary'
    | '/mygames'
    | '/orginalcharacters'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  GallaryRoute: typeof GallaryRoute
  MygamesRoute: typeof MygamesRoute
  OrginalcharactersRoute: typeof OrginalcharactersRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/orginalcharacters': {
      id: '/orginalcharacters'
      path: '/orginalcharacters'
      fullPath: '/orginalcharacters'
      preLoaderRoute: typeof OrginalcharactersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mygames': {
      id: '/mygames'
      path: '/mygames'
      fullPath: '/mygames'
      preLoaderRoute: typeof MygamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallary': {
      id: '/gallary'
      path: '/gallary'
      fullPath: '/gallary'
      preLoaderRoute: typeof GallaryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  GallaryRoute: GallaryRoute,
  MygamesRoute: MygamesRoute,
  OrginalcharactersRoute: OrginalcharactersRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
